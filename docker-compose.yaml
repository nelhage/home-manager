version: "3.3"
services:
  livegrep-backend-linux:
    image: "docker.io/livegrep/base:${image_version}"
    command:
      - "/livegrep/bin/codesearch"
      - "-grpc=0.0.0.0:9898"
      - "-load_index=/data/index.idx"
      - "-debug=profile,index"
      - "-threads=4"
    expose:
      - "9898"
    volumes:
      - livegrep-data:/data
    restart: unless-stopped

  livegrep-frontend:
    image: "docker.io/livegrep/base:${image_version}"
    command:
      - "/livegrep/bin/livegrep"
      - "-docroot"
      - "/livegrep/web/"
      - "/conf/livegrep.json"
    expose:
      - 8910
    volumes:
      - type: bind
        source: ./livegrep/conf
        target: /conf
        read_only: true
    restart: unless-stopped

  livegrep-nginx:
    image: "docker.io/livegrep/nginx:${image_version}"
    entrypoint:
      - nginx
      - -c
      - /conf/nginx.conf
    volumes:
      - type: bind
        source: ./livegrep/conf
        target: /conf
        read_only: true
    expose:
      - 80
    restart: unless-stopped

  livegrep-indexer:
    image: docker.io/livegrep/indexer:${image_version}
    command:
     - /livegrep/bin/livegrep-github-reindex
     - "-name=Linux $linux_version"
     - -repo=torvalds/linux
     - -revparse=false
     - "-revision=v$linux_version"
     - -dir=/data/
     - -out=/data/index.idx
     - -http
    volumes:
     - livegrep-data:/data
    restart: never

  crossme:
    build:
      context: ./images/crossme
      args:
        CROSSME_REVISION: ${CROSSME_REVISION:-master}
    expose:
     - 3000
    environment:
      METEOR_SETTING: '{"public":{"analytics":{"id":"UA-10353960-5","domain": "meteor.com"}}}'
      ROOT_URL: ${CROSSME_ROOT_URL:-http://localhost}
      MONGO_URL: mongodb://mongo:27017/meteor?connectTimeoutMS=5000&socketTimeoutMS=5000&ssl=false
      PORT: 3000
    links:
     - mongo
    restart: unless-stopped

  mongo:
    image: mongo:3.6
    command:
      - --storageEngine=wiredTiger
    volumes:
      - mongo-data:/data/db
    expose:
      - 27017
    restart: unless-stopped

  caddy:
    build:
      context: github.com/abiosoft/caddy-docker.git
      args:
       - plugins=git,googlecloud,cache,realip

    entrypoint:
      - caddy
      - -conf=/conf/Caddyfile
      - -agree
    environment:
      - CADDYPATH=/caddy
    volumes:
      - type: bind
        source: ./caddy/
        target: /conf
        read_only: true
      - caddy:/caddy
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  friendlybot:
    build:
      context: ./images/taktician
    command:
    - playtak
    - -user=FriendlyBot
    - -debug=1
    - -size=6
    - -limit=30s
    - -time=15m
    - -increment=30s
    - -friendly=true
    - -log-file=/taktician/friendly.log
    - -pass=${friendlybot_password}
    volumes:
      - taktician:/taktician
    restart: unless-stopped

  taktician:
    build:
      context: ./images/taktician
    command:
    - playtak
    - -user=TakticianBot
    - -debug=1
    - -size=6
    - -depth=0
    - -limit=30s
    - -time=20m
    - -increment=30s
    - -multi-cut=true
    - -pass=${taktician_password}
    volumes:
      - taktician:/taktician
    restart: unless-stopped

  asciisnowmanforyou:
    build:
      context: ./images/asciisnowmanforyou
    expose:
     - "80"
    restart: unless-stopped

volumes:
  mongo-data:
  livegrep-data:
  caddy:
  taktician:
