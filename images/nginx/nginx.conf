
user  nginx;
worker_processes  1;

error_log  stderr  warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$host" "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    charset utf-8;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;
    ssl_dhparam /etc/dhparam.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    add_header Expect-CT "enforce, max-age=31536000";
    add_header Strict-Transport-Security "max-age=31557600";

    # begin nelhage.com
    server {
      listen [::]:443 ssl http2 ipv6only=off;
      server_name nelhage.com;
      ssl_certificate /lego/certificates/nelhage.com.crt;
      ssl_certificate_key /lego/certificates/nelhage.com.key;

      add_header Expect-CT "enforce, max-age=31536000";
      add_header Strict-Transport-Security "max-age=31557600; preload; includeSubDomains";

      location / {
        proxy_pass http://nelhage.com;
      }
    }
    server {
      listen [::]:443;
      server_name www.nelhage.com;
      ssl_certificate /lego/certificates/www.nelhage.com.crt;
      ssl_certificate_key /lego/certificates/www.nelhage.com.key;

      return 301 "https://nelhage.com/";
    }
    server {
      listen [::]:80;
      server_name www.nelhage.com nelhage.com;
      return 301 "https://nelhage.com/";
    }
    # end nelhage.com

    # begin livegrep.com
    server {
      listen [::]:443;
      server_name livegrep.com;
      ssl_certificate /lego/certificates/livegrep.com.crt;
      ssl_certificate_key /lego/certificates/livegrep.com.key;

      add_header Expect-CT "enforce, max-age=31536000";
      add_header Strict-Transport-Security "max-age=31557600; preload; includeSubDomains";

      location / {
        proxy_pass http://livegrep-nginx;
      }
    }

    server {
      listen [::]:443;
      server_name www.livegrep.com;
      ssl_certificate /lego/certificates/www.livegrep.com.crt;
      ssl_certificate_key /lego/certificates/www.livegrep.com.key;

      return 301 "https://livegrep.com/";
    }
    server {
      listen [::]:80;
      server_name www.livegrep.com livegrep.com;
      return 301 "https://livegrep.com/";
    }
    # end livegrep.com

    # begin asciisnowmanforyou.com
    server {
      listen [::]:443;
      server_name asciisnowmanforyou.com;
      ssl_certificate /lego/certificates/asciisnowmanforyou.com.crt;
      ssl_certificate_key /lego/certificates/asciisnowmanforyou.com.key;

      add_header Expect-CT "enforce, max-age=31536000";
      add_header Strict-Transport-Security "max-age=31557600; preload; includeSubDomains";

      location / {
        proxy_pass http://asciisnowmanforyou;
      }
    }

    server {
      listen [::]:443;
      server_name www.asciisnowmanforyou.com;
      ssl_certificate /lego/certificates/www.asciisnowmanforyou.com.crt;
      ssl_certificate_key /lego/certificates/www.asciisnowmanforyou.com.key;

      return 301 "https://asciisnowmanforyou.com/";
    }
    server {
      listen [::]:80;
      server_name www.asciisnowmanforyou.com asciisnowmanforyou.com;
      return 301 "https://asciisnowmanforyou.com/";
    }
    # end asciisnowmanforyou.com

    # begin crossme.app
    server {
      listen [::]:443;
      server_name crossme.app;
      ssl_certificate /lego/certificates/crossme.app.crt;
      ssl_certificate_key /lego/certificates/crossme.app.key;

      add_header Expect-CT "enforce, max-age=31536000";
      add_header Strict-Transport-Security "max-age=31557600; preload; includeSubDomains";

      location / {
        proxy_pass http://crossme:3000;
      }
      location /sockjs/ {
        proxy_pass http://crossme:3000;
        access_log off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }
    }

    server {
      listen [::]:443;
      server_name beta.crossme.app;
      ssl_certificate /lego/certificates/beta.crossme.app.crt;
      ssl_certificate_key /lego/certificates/beta.crossme.app.key;

      location / {
        proxy_pass http://crossme-statics;
        proxy_buffering off;
      }
      location /api {
        proxy_pass http://crossme-statics;
        proxy_buffering off;
        access_log off;
      }
    }

    server {
      listen [::]:443;
      server_name www.crossme.app;
      ssl_certificate /lego/certificates/www.crossme.app.crt;
      ssl_certificate_key /lego/certificates/www.crossme.app.key;

      return 301 "https://crossme.app/";
    }
    server {
      listen [::]:80;
      server_name www.crossme.app crossme.app;
      return 301 "https://crossme.app/";
    }
    # end crossme.app

    # begin minimax.dev
    server {
      listen [::]:443;
      server_name minimax.dev;
      ssl_certificate /lego/certificates/minimax.dev.crt;
      ssl_certificate_key /lego/certificates/minimax.dev.key;

      add_header Expect-CT "enforce, max-age=31536000";
      add_header Strict-Transport-Security "max-age=31557600; preload; includeSubDomains";

      location / {
          proxy_pass http://minimax.dev;
      }
    }

    server {
      listen [::]:443;
      server_name www.minimax.dev;
      ssl_certificate /lego/certificates/www.minimax.dev.crt;
      ssl_certificate_key /lego/certificates/www.minimax.dev.key;

      return 301 "https://minimax.dev/";
    }
    server {
      listen [::]:80;
      server_name www.minimax.dev minimax.dev;
      return 301 "https://minimax.dev/";
    }
    # end minimax.dev

    server {
      listen [::]:80 default ipv6only=off;
      return 301 "https://nelhage.com/";
    }
}
